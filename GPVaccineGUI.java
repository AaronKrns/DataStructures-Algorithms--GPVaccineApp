
package GPVaccineApp;

import java.util.ArrayList;

/**
 * GPVaccineGUI.java
 * Product Version: Apache NetBeans IDE 12.5
 * @author Aaron Kearns
 * 25/03/2022
*/
public class GPVaccineGUI extends javax.swing.JFrame {

    private PQInterface myPQ;
    private ArrayList <Person> person;
    
    public GPVaccineGUI() {
        myPQ = new MyPriorityQueue();
        person = new ArrayList<>();
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        welcomeJLabel = new javax.swing.JLabel();
        nameJLabel = new javax.swing.JLabel();
        ageJLabel = new javax.swing.JLabel();
        nameJText = new javax.swing.JTextField();
        medicalConditionJText = new javax.swing.JTextField();
        numPeopleJButton = new javax.swing.JButton();
        addJButton = new javax.swing.JButton();
        removeJButton = new javax.swing.JButton();
        displayJLabel = new javax.swing.JLabel();
        exitjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDisplay = new javax.swing.JTextArea();
        medicalConditionJLabel1 = new javax.swing.JLabel();
        ageJText = new javax.swing.JTextField();
        listJButton = new javax.swing.JButton();
        prioritiesJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        welcomeJLabel.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        welcomeJLabel.setForeground(java.awt.Color.darkGray);
        welcomeJLabel.setText("National Covid-19 Vaccination Programme - Vaccination Waiting List Manager Application");

        nameJLabel.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        nameJLabel.setForeground(java.awt.Color.gray);
        nameJLabel.setText("Person name");

        ageJLabel.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        ageJLabel.setForeground(java.awt.Color.gray);
        ageJLabel.setText("Person age");

        nameJText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameJTextActionPerformed(evt);
            }
        });

        medicalConditionJText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicalConditionJTextActionPerformed(evt);
            }
        });

        numPeopleJButton.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        numPeopleJButton.setText("No. of Registered People ");
        numPeopleJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numPeopleJButtonActionPerformed(evt);
            }
        });

        addJButton.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        addJButton.setText("Register Person");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        removeJButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removeJButton.setText("Remove Next Prioritised People");
        removeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeJButtonActionPerformed(evt);
            }
        });

        displayJLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        exitjButton.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        exitjButton.setText("Exit");
        exitjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitjButtonActionPerformed(evt);
            }
        });

        jTextAreaDisplay.setColumns(20);
        jTextAreaDisplay.setLineWrap(true);
        jTextAreaDisplay.setRows(5);
        jScrollPane1.setViewportView(jTextAreaDisplay);

        medicalConditionJLabel1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        medicalConditionJLabel1.setForeground(java.awt.Color.gray);
        medicalConditionJLabel1.setText("Person medical conditions (Enter 'Y' or 'N')");

        ageJText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageJTextActionPerformed(evt);
            }
        });

        listJButton.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        listJButton.setText("List Registered People");
        listJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listJButtonActionPerformed(evt);
            }
        });

        prioritiesJButton.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        prioritiesJButton.setText("Allocate Priorities ");
        prioritiesJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prioritiesJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(displayJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(welcomeJLabel)))
                .addGap(0, 56, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(exitjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(listJButton)
                                    .addGap(18, 18, 18)
                                    .addComponent(numPeopleJButton)
                                    .addGap(23, 23, 23)
                                    .addComponent(prioritiesJButton))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(addJButton)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(medicalConditionJLabel1)
                                                .addGap(18, 18, 18)
                                                .addComponent(medicalConditionJText, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(nameJLabel)
                                                    .addComponent(ageJLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(ageJText, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                                                    .addComponent(nameJText)))))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(353, 353, 353)
                        .addComponent(removeJButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcomeJLabel)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameJLabel)
                    .addComponent(nameJText, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageJLabel)
                    .addComponent(ageJText, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(medicalConditionJLabel1)
                    .addComponent(medicalConditionJText, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(addJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numPeopleJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prioritiesJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(removeJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(exitjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(48, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(displayJLabel)
                        .addGap(82, 82, 82))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameJTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameJTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameJTextActionPerformed

    private void numPeopleJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numPeopleJButtonActionPerformed
        // TODO add your handling code here:
        jTextAreaDisplay.append("There are " + person.size() + " people registered."+ "\n");
    }//GEN-LAST:event_numPeopleJButtonActionPerformed

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        // TODO add your handling code here:

        if( nameJText.getText().trim().isEmpty() || ageJText.getText().trim().isEmpty() || medicalConditionJText.getText().trim().isEmpty() ){
            jTextAreaDisplay.append("Error: Person has not been successfully registered. Please ensure all text fields are filled in correctly."+ "\n");
        }
        else if (medicalConditionJText.getText().equalsIgnoreCase("y") || medicalConditionJText.getText().equalsIgnoreCase("n")) {
            Person p = new Person();
            p.setName(nameJText.getText());
            p.setAge(Integer.parseInt(ageJText.getText()));
            p.setMedicalCondition(medicalConditionJText.getText());
            person.add(p);

            jTextAreaDisplay.append(nameJText.getText() + " has been successfully registered."+ "\n");         
        }
        else {
            jTextAreaDisplay.append("Error: Person has not been successfully registered. Please ensure all text fields are filled in correctly."+ "\n");
        }
        
        nameJText.setText("");
        ageJText.setText("");
        medicalConditionJText.setText("");
    }//GEN-LAST:event_addJButtonActionPerformed

    private void removeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeJButtonActionPerformed
        // TODO add your handling code here:

        if(!myPQ.isEmpty()){
            
            PQElement pqelem = (PQElement)myPQ.dequeue();
            PersonPrioritised pp = (PersonPrioritised)pqelem.getElement();

            jTextAreaDisplay.append("Next people to be vaccinated are..."+"\n");
            jTextAreaDisplay.append("Name: "+pp.getName()+" ,age: "+pp.getAge()+" ,medical condition: "+pp.getMedicalCondition()+" ,priority: "+pqelem.getKey());
            
            /*
            PQElement pqelem = (PQElement)myPQ.dequeue();
            PersonPrioritised pp1 = (PersonPrioritised)pqelem.getElement();
            
            for (int i = 0; i<myPQ.size();i++) {
                pqelem = myPQ.get(i);
                if( myPQ.get(i) == pqelem.getKey() ) {
                    PQElement pqelem = (PQElement)myPQ.dequeue();
                    PersonPrioritised pp = (PersonPrioritised)pqelem.getElement();

                    jTextAreaDisplay.append("Name: "+pp.getName()+" ,age: "+pp.getAge()+" ,medical condition: "+pp.getMedicalCondition()+" ,priority: "+pqelem.getKey());
                }
            }
            */
        }
        else
            jTextAreaDisplay.append("There are no more people waiting to be vaccinated."+ "\n");
    }//GEN-LAST:event_removeJButtonActionPerformed

    private void exitjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitjButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitjButtonActionPerformed

    private void ageJTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageJTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageJTextActionPerformed

    private void listJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listJButtonActionPerformed
        // TODO add your handling code here:

        if(person.isEmpty()) {
            jTextAreaDisplay.append("No people registered."+"\n");
        }
        else {
            jTextAreaDisplay.append("The people registered are...\n");
            int i;
            for(i = 0;i<person.size();i++)
            {
                Person onePerson;
                onePerson = person.get(i);
                jTextAreaDisplay.append(onePerson.printPeopleRegistered()+"\n");
            }
        }
        
    }//GEN-LAST:event_listJButtonActionPerformed

    private void prioritiesJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prioritiesJButtonActionPerformed

        if(person.isEmpty()) {
            jTextAreaDisplay.append("No people registered to allocate priorites to."+"\n");
        }
        else {
            int priority=0;

            for(Person p:person){
                if(p.getAge()>=90){
                    priority=10;
                }
                else if(p.getAge()<90&&p.getAge()>=80){
                    priority=9;
                }
                else if(p.getAge()<80&&p.getAge()>=70){
                    priority=8;
                }
                else if(p.getAge()<70&&p.getAge()>=65){
                    priority=7;
                }
                else if(p.getAge()<65&&p.getAge()>=18&&p.getMedicalCondition().equalsIgnoreCase("Y")){
                    priority=6;
                }
                else if(p.getAge()<65&&p.getAge()>=55){
                    priority=5;
                }
                else if(p.getAge()<55&&p.getAge()>=45){
                    priority=4;
                }
                else if(p.getAge()<45&&p.getAge()>=30){
                    priority=3;
                }
                else if(p.getAge()<30&&p.getAge()>=18){
                    priority=2;
                }
                else {
                    priority=1;
                }
                p.setPriority(priority);
                PersonPrioritised pp = new PersonPrioritised();
                pp.setName(p.getName());
                pp.setAge(p.getAge());
                pp.setMedicalCondition(p.getMedicalCondition());
                myPQ.enqueue(priority,pp);
            }
            jTextAreaDisplay.append("Priorities have been successfully allocated..."+ "\n");
            jTextAreaDisplay.append(myPQ.printPQ()+ "\n");
        }
        
    }//GEN-LAST:event_prioritiesJButtonActionPerformed

    private void medicalConditionJTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicalConditionJTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_medicalConditionJTextActionPerformed

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JLabel ageJLabel;
    private javax.swing.JTextField ageJText;
    private javax.swing.JLabel displayJLabel;
    private javax.swing.JButton exitjButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaDisplay;
    private javax.swing.JButton listJButton;
    private javax.swing.JLabel medicalConditionJLabel1;
    private javax.swing.JTextField medicalConditionJText;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JTextField nameJText;
    private javax.swing.JButton numPeopleJButton;
    private javax.swing.JButton prioritiesJButton;
    private javax.swing.JButton removeJButton;
    private javax.swing.JLabel welcomeJLabel;
    // End of variables declaration//GEN-END:variables

}
